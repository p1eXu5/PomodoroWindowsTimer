<UserControl x:Class="PomodoroWindowsTimer.WpfClient.UserControls.ControlButtons"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:digitPanel="clr-namespace:p1eXu5.Wpf.DigitPanel;assembly=p1eXu5.Wpf.DigitPanel"
             xmlns:local="clr-namespace:PomodoroWindowsTimer.WpfClient.UserControls"
             xmlns:mainModel="clr-namespace:PomodoroWindowsTimer.ElmishApp.MainModel;assembly=PomodoroWindowsTimer.ElmishApp"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pwt="clr-namespace:PomodoroWindowsTimer.Wpf;assembly=PomodoroWindowsTimer.Wpf"
             d:DataContext="{d:DesignInstance Type=mainModel:Bindings,
                                              IsDesignTimeCreatable=False}"
             d:DesignHeight="100"
             d:DesignWidth="800"
             mc:Ignorable="d"
             >

    <!--  Buttons  -->
    <StackPanel Margin="0,30"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                >
        <StackPanel.Resources>
            <Style x:Key="st_MediaButtonLcd"
                   TargetType="pwt:Lcd"
                   >
                <Setter Property="Width" Value="100" />
                <Setter Property="Height" Value="40" />
                <Setter Property="TintLightBrush" Value="{DynamicResource MaterialDesign.Brush.Secondary.Light}" />
                <Setter Property="Brightness" Value="8" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Brightness" Value="12" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="st_MediaButton"
                   TargetType="{x:Type Button}"
                   >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=pwt:Lcd}, Path=HighLightBrush}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="TextBlock.FontSize" Value="14" />
                <Setter Property="TextBlock.FontWeight" Value="Medium" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Width" Value="96" />
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=pwt:Lcd}, Path=CornerRadius}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                <Grid Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}">
                                    <Grid Margin="1"
                                          HorizontalAlignment="Stretch"
                                          >
                                        <Border x:Name="border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                />

                                        <ContentPresenter x:Name="MyContentPresenter"
                                                          Height="{TemplateBinding Height}"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding Content}"
                                                          />
                                    </Grid>
                                </Grid>
                            </AdornerDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter TargetName="MyContentPresenter" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </StackPanel.Resources>

        <pwt:Lcd Style="{StaticResource st_MediaButtonLcd}"
                 Visibility="{Binding LooperIsRunning, Converter={StaticResource conv_BooleanToVisibility}}"
                 >
            <Button Command="{Binding ReplayCommand}"
                    Content="Replay"
                    Style="{StaticResource st_MediaButton}"
                    />
        </pwt:Lcd>


        <pwt:Lcd Margin="20,0,0,0"
                 Style="{StaticResource st_MediaButtonLcd}"
                 >
            <Button Command="{Binding PlayStopCommand}"
                    Content="{Binding PlayPauseButtonText, FallbackValue=Resume}"
                    Style="{StaticResource st_MediaButton}"
                    />
        </pwt:Lcd>

        <pwt:Lcd Margin="20,0,0,0"
                 Style="{StaticResource st_MediaButtonLcd}"
                 Visibility="{Binding LooperIsRunning, Converter={StaticResource conv_BooleanToVisibility}}"
                 >
            <Button Command="{Binding NextCommand}"
                    Content="Next"
                    Style="{StaticResource st_MediaButton}"
                    />
        </pwt:Lcd>

        <!--<Button Content="Minimize" Margin="10,0" Command="{Binding MinimizeCommand}" />-->
        <!--<Button Content="Send Test Msg" Margin="10,0" Command="{Binding SendToChatBotCommand}" />-->
    </StackPanel>
</UserControl>
