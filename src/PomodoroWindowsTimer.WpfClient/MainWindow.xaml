<Window x:Class="PomodoroWindowsTimer.WpfClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:digitPanel="clr-namespace:p1eXu5.Wpf.DigitPanel;assembly=p1eXu5.Wpf.DigitPanel"
        xmlns:local="clr-namespace:PomodoroWindowsTimer.WpfClient"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:settings="clr-namespace:PomodoroWindowsTimer.WpfClient.UserControls.Settings"
        xmlns:usercontrols="clr-namespace:PomodoroWindowsTimer.WpfClient.UserControls"
        xmlns:vm="clr-namespace:PomodoroWindowsTimer.ElmishApp;assembly=PomodoroWindowsTimer.ElmishApp"
        Title="{Binding Title}"
        Width="800"
        Height="420"
        MinWidth="650"
        MinHeight="420"
        Background="{DynamicResource {x:Static digitPanel:DigitPanelColors.DigitPanelBackgroundKey}}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Icon="pomodoro-technique.ico"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        >
    <Window.Resources>
        <DataTemplate x:Key="dt_BotSettingsDialog">
            <settings:BotSettings DataContext="{Binding}" />
        </DataTemplate>
    </Window.Resources>

    <materialDesign:DialogHost DialogClosing="DialogHost_DialogClosing"
                               DialogContentTemplate="{StaticResource dt_BotSettingsDialog}"
                               DialogTheme="Inherit"
                               Identifier="RootDialog"
                               SnackbarMessageQueue="{Binding ElementName=ErrorMessageQueue, Path=MessageQueue}"
                               >

        <materialDesign:DrawerHost x:Name="DrawerHost"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   BorderBrush="{DynamicResource MaterialDesignDivider}"
                                   BorderThickness="2"
                                   BottomDrawerBackground="{DynamicResource SecondaryHueLightBrush}"
                                   BottomDrawerCornerRadius="20 20 0 0"
                                   >
            <materialDesign:DrawerHost.LeftDrawerContent>
                <usercontrols:RunningTimePoints DataContext="{Binding}" />
            </materialDesign:DrawerHost.LeftDrawerContent>

            <!--  time points generator  -->
            <materialDesign:DrawerHost.RightDrawerContent>
                <settings:TimePointsSettings MinWidth="650" DataContext="{Binding TimePointsSettingsModel}" />
            </materialDesign:DrawerHost.RightDrawerContent>

            <DockPanel Margin="10,0,10,0" LastChildFill="True">
                <!--  top menu buttons  -->
                <DockPanel DockPanel.Dock="Top" VerticalAlignment="Center">
                    <!--  version  -->
                    <TextBlock DockPanel.Dock="Right"
                               Margin="5,5,10,5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="#4E6876"
                               Text="{Binding AssemblyVersion, FallbackValue=v 1.0.1.0}"
                               />
                    <!--  running time points  -->
                    <Button DockPanel.Dock="Left"
                            HorizontalAlignment="Left"
                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                            CommandParameter="{x:Static Dock.Left}"
                            Content="{materialDesign:PackIcon TimerPlayOutline}"
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="MaterialDesignFloatingActionMiniDarkButton"
                            />
                    <!--  time points generator open button  -->
                    <Button DockPanel.Dock="Left"
                            HorizontalAlignment="Left"
                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                            CommandParameter="{x:Static Dock.Right}"
                            Content="{materialDesign:PackIcon TimerCogOutline}"
                            Style="{StaticResource MaterialDesignIconButton}"
                            ToolTip="MaterialDesignFloatingActionMiniDarkButton"
                            />
                    <!--  telegram bot settings open dialog button  -->
                    <Button DockPanel.Dock="Left"
                            HorizontalAlignment="Left"
                            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                            CommandParameter="{Binding BotSettingsModel}"
                            Content="{materialDesign:PackIcon CommentAccountOutline}"
                            RenderTransformOrigin="0.5,0.5"
                            Style="{StaticResource MaterialDesignIconButton}"
                            >
                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform X="2" Y="1" />
                            </TransformGroup>
                        </Button.RenderTransform>
                    </Button>
                </DockPanel>

                <materialDesign:Snackbar DockPanel.Dock="Bottom"
                                         HorizontalAlignment="Stretch"
                                         ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionDarkButton}"
                                         MessageQueue="{Binding ErrorMessageQueue}"
                                         />

                <materialDesign:ColorZone VerticalAlignment="Center" Background="{DynamicResource {x:Static digitPanel:DigitPanelColors.DigitPanelBackgroundKey}}">
                    <!--  Content  -->
                    <DockPanel Margin="0,0,0,20" LastChildFill="True">
                        <DockPanel.Resources>
                            <DataTemplate x:Key="gp_Green">
                                <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                                    <TextBlock Margin="0,0,0,20"
                                               HorizontalAlignment="Left"
                                               Foreground="#00FF00"
                                               Text="{Binding DataContext.ActiveTimePointName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                               />
                                    <digitPanel:TimerTable HorizontalAlignment="Stretch"
                                                           VerticalAlignment="Center"
                                                           DigitBackground="#004000"
                                                           Foreground="#00FF00"
                                                           Format="mm':'ss"
                                                           Value="{Binding DataContext.ActiveTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}, FallbackValue=00:00:00.00}"
                                                           />
                                    <Slider DockPanel.Dock="Top"
                                            Margin="0,40,0,0"
                                            Foreground="#00FF00"
                                            IsEnabled="{Binding DataContext.IsActiveTimePointSet, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                            Maximum="{Binding DataContext.ActiveTimeDuration, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                            Minimum="0"
                                            Orientation="Horizontal"
                                            PreviewMouseDown="Slider_MouseDown"
                                            PreviewMouseUp="Slider_MouseUp"
                                            Value="{Binding DataContext.ActiveTimeSeconds, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                            />
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="gp_Red">
                                <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                                    <TextBlock Margin="0,0,0,20"
                                               HorizontalAlignment="Left"
                                               Foreground="#FF0000"
                                               Text="{Binding DataContext.ActiveTimePointName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                               />
                                    <digitPanel:TimerTable HorizontalAlignment="Stretch"
                                                           VerticalAlignment="Center"
                                                           DigitBackground="#400000"
                                                           Foreground="#FF0000"
                                                           Format="mm':'ss"
                                                           Value="{Binding DataContext.ActiveTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}, FallbackValue=00:00:00.00}"
                                                           />
                                    <Slider DockPanel.Dock="Top"
                                            Margin="0,40,0,0"
                                            Foreground="#FF0000"
                                            IsEnabled="{Binding DataContext.IsActiveTimePointSet, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                            Maximum="{Binding DataContext.ActiveTimeDuration, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                            Minimum="0"
                                            Orientation="Horizontal"
                                            PreviewMouseDown="Slider_MouseDown"
                                            PreviewMouseUp="Slider_MouseUp"
                                            Value="{Binding DataContext.ActiveTimeSeconds, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                            />
                                </StackPanel>
                            </DataTemplate>

                            <local:DigitPanelTemplateSelector x:Key="dts_DigitPanel" />
                        </DockPanel.Resources>

                        <!--  Digit Panel  -->
                        <ContentControl x:Name="m_DigitPanel"
                                        DockPanel.Dock="Top"
                                        HorizontalAlignment="Center"
                                        Content="{Binding IsBreak}"
                                        ContentTemplateSelector="{StaticResource dts_DigitPanel}"
                                        DataContext="{Binding}"
                                        />

                        <!--  Buttons  -->
                        <StackPanel Height="120"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Orientation="Horizontal"
                                    >
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource MaterialDesignFlatSecondaryDarkBgButton}" TargetType="Button">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush>
                                                <GradientStop Offset="0" Color="#A1B1A1" />
                                                <GradientStop Offset="1" Color="#637363" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static digitPanel:DigitPanelColors.DigitPanelBackgroundKey}}" />
                                    <Setter Property="Width" Value="90" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Command="{Binding ReplayCommand}"
                                    Content="Replay"
                                    Visibility="{Binding LooperIsRunning, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    />
                            <Button Margin="20,0,0,0"
                                    Command="{Binding PlayStopCommand}"
                                    Content="{Binding PlayPauseButtonText, FallbackValue=Resume}"
                                    />
                            <Button Margin="20,0,0,0"
                                    Command="{Binding NextCommand}"
                                    Content="Next"
                                    Visibility="{Binding LooperIsRunning, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    />
                            <!--<Button Content="Minimize" Margin="10,0" Command="{Binding MinimizeCommand}" />-->
                            <!--<Button Content="Send Test Msg" Margin="10,0" Command="{Binding SendToChatBotCommand}" />-->
                        </StackPanel>

                    </DockPanel>
                </materialDesign:ColorZone>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
